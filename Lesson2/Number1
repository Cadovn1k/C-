//не работает
package Site2ndweek;
import java.io.*;
import java.util.Scanner;
public class Number1 {
    public static void main(String[] args) throws Exception {
        try (FileReader fout = new FileReader("input.txt");
             FileWriter fin = new FileWriter("output.txt", false)){
            Scanner inp = new Scanner(fout);
            int n = inp.nextInt();
            int[] mas = new int[n];
            for (int i = 0; i < mas.length; i++) {
                mas[i] = inp.nextInt();
                System.out.print(mas[i] + " ");
            }
//            System.out.println();
            String sort = "";
            mergeSort(mas,0, mas.length - 1);

            for (int i = 0; i < mas.length; i++) {
                sort += mas[i] + " ";
            }
            fin.write(sort);
            fin.close();
        }
    }
    public static void mergeSort(int[] array, int left, int right) throws IOException {
        if (right <= left) return;
        int mid = (left+right)/2;
        mergeSort(array, left, mid);
        mergeSort(array, mid+1, right);
        merge(array, left, mid, right);
    }
    public static void merge(int[] array, int left, int mid, int right) throws IOException {
        try (FileWriter fin = new FileWriter("output.txt", false)) {
            String str = "";
            // вычисляем длину
            int lengthLeft = mid - left + 1;
            int lengthRight = right - mid;

            // создаем временные подмассивы
            int leftArray[] = new int[lengthLeft];
            int rightArray[] = new int[lengthRight];

            // копируем отсортированные массивы во временные
            for (int i = 0; i < lengthLeft; i++)
                leftArray[i] = array[left + i];
            for (int i = 0; i < lengthRight; i++)
                rightArray[i] = array[mid + i + 1];

            // итераторы содержат текущий индекс временного подмассива
            int leftIndex = 0;
            int rightIndex = 0;

            // копируем из leftArray и rightArray обратно в массив
            for (int i = left; i < right + 1; i++) {
                // если остаются нескопированные элементы в R и L, копируем минимальный
                if (leftIndex < lengthLeft && rightIndex < lengthRight) {
                    if (leftArray[leftIndex] < rightArray[rightIndex]) {
                        array[i] = leftArray[leftIndex];
                        leftIndex++;
                    } else {
                        array[i] = rightArray[rightIndex];
                        rightIndex++;
                    }
                }
                // если все элементы были скопированы из rightArray, скопировать остальные из leftArray
                else if (leftIndex < lengthLeft) {
                    array[i] = leftArray[leftIndex];
                    leftIndex++;
                }
                // если все элементы были скопированы из leftArray, скопировать остальные из rightArray
                else if (rightIndex < lengthRight) {
                    array[i] = rightArray[rightIndex];
                    rightIndex++;
                }
            }
            str += "\n" + left + " " + right + " " + array[left] + " " + array[right];
            fin.write(str);
        } catch (Exception e) {
            System.out.println("ERROR");
        }
    }

}
